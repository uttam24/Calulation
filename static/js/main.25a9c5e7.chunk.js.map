{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","number1","setNumber1","number2","setNumber2","total","setTotal","className","onSubmit","event","preventDefault","type","value","onChange","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2JAkCeA,EA/BJ,WAAM,IAAD,EAEeC,mBAAS,IAFxB,mBAEPC,EAFO,KAEEC,EAFF,OAGeF,mBAAS,IAHxB,mBAGPG,EAHO,KAGEC,EAHF,OAIWJ,mBAAS,IAJpB,mBAIPK,EAJO,KAIAC,EAJA,KAkBd,OACE,sBAAKC,UAAU,MAAf,UACA,gEACA,uBAAMC,SAPa,SAACC,GACpBA,EAAMC,iBACNJ,EAASL,EAAUE,IAKnB,UACA,gCAAK,4CAAsB,uBAAOQ,KAAK,OAAOC,MAAOX,EAASY,SAhBjD,SAACJ,GACdP,GAAYO,EAAMK,OAAOF,aAgBzB,gCAAK,4CAAsB,uBAAOD,KAAK,OAAOC,MAAOT,EAASU,SAb/C,SAACJ,GAChBL,GAAYK,EAAMK,OAAOF,aAazB,wBAAQD,KAAK,SAAb,4BAEE,6BAAKN,QCjBIU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.25a9c5e7.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nconst App =()=> {\n\n  const [number1, setNumber1] =useState('');\n  const [number2, setNumber2] =useState('');\n  const [total, setTotal] =useState('');\n\n  const getData =(event)=>{\n    setNumber1(+event.target.value);\n  }\n\n   const getData1 =(event)=>{\n    setNumber2(+event.target.value);\n  }\n\n  const handlerEvent = (event)=>{\n    event.preventDefault();\n    setTotal(number1 + number2);\n  }\n  return (\n    <div className=\"App\">\n    <h2>React Addition of Two Numbers </h2>\n    <form onSubmit={handlerEvent}>\n    <div><label>Value 1</label><input type=\"text\" value={number1} onChange={getData}/></div>\n    <div><label>Value 2</label><input type=\"text\" value={number2} onChange={getData1}/></div>\n    <button type=\"submit\">Total Value</button>\n    </form>\n      <h2>{total}</h2>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}